load('variable2')
%Case 1: all sensors are hard sensors delete the one under study

motes_for_BME=[1:4 6:14 16:17 19:54];
locations = dlmread('locations.txt');

ns = 1:100

time = zeros(length(ns),1);
MAPE = zeros(length(ns),1);
RMSE = zeros(length(ns),1);
CVRMSE = zeros(length(ns),1);


N = 1200

for n = ns
matrixForNA=zeros(51,N);
[nrow, ncol] = size(matrixForNA);
nNA = nrow*ncol*n/100;
msize = numel(matrixForNA);
rng(n);
elements = randperm(msize, nNA);
matrixForNA(elements)=1;
[rId, cId] = find(matrixForNA);
 sortrows([rId, cId],1);

positions = zeros(51,N);
for row= 1:51
positions(row,:) = 1:N;
end
%csvwrite('/home/aurora/Git_repos/posgradoActual/Melbourne/BMECode/NApos.csv', positions.*matrixForNA);


%M = (matrixForNA)'
NAPerSensor = sum(matrixForNA,2)';
[row,col] = find(matrixForNA);
sr = sortrows([row,col],1);
NAPositionsWithinSensors = sr(:,2)';
%rem(sort(elements), N+1)

%NAPerSensor = randi(10, 1, length(motes_for_BME));
%NAPositionsWithinSensors = randi(N, 1, sum(NAPerSensor))  %consider 1000 values




ck = repelem(locations(ismember(locations(:,1),motes_for_BME),2:3),NAPerSensor,1);
thesensor = repelem(motes_for_BME, NAPerSensor);

cs = [];

motes_for_BME2=[1:4 6:14 16:17 19:54];
   
%temp = zeros(50,sum(NAPerSensor));

temp = cell(1, length(thesensor));
ch3 = cell(1, length(thesensor));

ssaux=1
for(sens = 1:length(motes_for_BME))
%    motes = motes_for_BME2(~ismember(motes_for_BME2,motes_for_BME(sens))); % get rid of the one we want to predict 
    for k = 1:NAPerSensor(sens)
            motesWithNAsamePosition = motes_for_BME2(sr(find(sr(:,2)==NAPositionsWithinSensors(ssaux)),1)); %get rid of the ones that have a NA in the place and also the one we want to predict
            motes = motes_for_BME2(~ismember(motes_for_BME2,motesWithNAsamePosition));
            for m = 1:length(motes)
                temp{ssaux}(m) =eval(['mote_' num2str(motes(m)) '_temprature_actual(NAPositionsWithinSensors(ssaux))']);
            end
            ch3{ssaux} = locations(ismember(locations(:,1), motes),2:3);
            ssaux = ssaux+1;
    end
end


%temp(:,1) all sensors minus the first temperature in the position of the first NA 

tempReal = zeros(sum(NAPerSensor),1);

ssaux=1
for(sens = 1:length(motes_for_BME))
    for k = 1:NAPerSensor(sens)
        tempReal(ssaux) =eval(['mote_' num2str(motes_for_BME(sens)) '_temprature_actual(NAPositionsWithinSensors(ssaux))']);
        ssaux = ssaux+1;
    end
end



temperature = temp;
a_temperature=[];
b_temperature=[];


modelCsand={'nuggetC','exponentialC'};
paramsand={-0.0795,[0.6656,22.3507]};
%nhmax=4;
nsmax=3;
total=nhmax+nsmax;
dmax=100;
order=0;

real_temperature = tempReal;


    nhmax = 6
tic
predict_temprature_BME3 = BMEintervalMode3(ck,ch3,cs,temp,a_temperature,b_temperature,modelCsand,paramsand,nhmax,nsmax,dmax,order);
time(n) = toc

MAPE_now = sum(100*abs((real_temperature-predict_temprature_BME3)./real_temperature))/length(real_temperature)
RMSE_now = sqrt(mean((real_temperature - predict_temprature_BME3).^2));
CVRMSE_now = RMSE_now/mean(real_temperature)*100

MAPE(n) = MAPE_now
RMSE(n) = RMSE_now
CVRMSE(n) = CVRMSE_now

end


csvwrite('fig10NAchangesNH6.csv', [ns',MAPE, RMSE, CVRMSE, time])